#include <bits/stdc++.h> 
vector<int> nextPermutation(vector<int> &p, int n)
{
    //  Write your code here.
    int ind=-1;
    for(int i=n-1;i>0;i--)
    {
        if(p[i]>p[i-1])
        {
            ind=i-1;
            break;
        }
    }
    if(ind!=-1){
    int ind1=ind+1;
    for(int i=ind+1;i<n;i++)
    {
        if(p[i]>p[ind])
        {
            ind1=i;
            continue;
        }
        else{
            ind1=i-1;
            break;
        }
    }
    swap(p[ind],p[ind1]);
    }
    int i=ind+1;
    int j=n-1;
    while(i<j)
    {
        swap(p[i],p[j]);
        i++;
        j--;
    }
    return p;
}


//Here we used property of dictionary order i.e from last element keep increasing and there is point where element suddenly decrease, this is the point where we need to
increase or change element here we simply add next greater element i.e last element from given permutation and after that we need elements as minimum as possible so we 
reversed the array from that index because we know from there elements is in decreasing order.
