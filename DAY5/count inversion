import java.util.* ;
import java.io.*; 
public class Solution {
    public static long merge(long arr[],int b,long temp[],int m,int e)
    {
    
        int i=b;
        int j=m;
        long inv=0;
        int k=b;
        while(i<=m-1&&j<=e)
        {
            if(arr[i]<=arr[j])
            {
                temp[k++]=arr[i++];
            }
            else if(arr[j]<arr[i])
            {
               temp[k++]=arr[j++];
                inv+=(m-i);
            }
        }
        while(i<=m-1)
        {
            temp[k++]=arr[i++];
        }
        while(j<=e)
        {
             temp[k++]=arr[j++];
        }
        for(i=b;i<=e;i++)
        {
            arr[i]=temp[i];
        }
        return inv;
    }
    public static long ms(long arr[],long temp[],int b,int e)
    {
        long inv=0;
        if(b<e)
        {
            int mid=(b+e)/2;
            inv+=ms(arr,temp,b,mid);
            inv+=ms(arr,temp,mid+1,e);
            inv+=merge(arr,b,temp,mid+1,e);
        }
        return inv;
    }
    public static long getInversions(long arr[], int n) {
        if(n==1)
            return 0;
        long temp[]=new long[n];
        return ms(arr,temp,0,n-1);
    }
}



//mistake was done i.e taken vector/list as temporary array for merging but got TLE 
//so used one temporary array for whole algo.
