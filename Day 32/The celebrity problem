/*
	This is signature of helper function 'knows'.
	You should not implement it, or speculate about its implementation.

	boolean knows(int A, int B); 
	Function 'knows(A, B)' will returns "true" if the person having
	id 'A' know the person having id 'B' in the party, "false" otherwise.
	Use it as Runner.knows(A, B);
*/
	
import java.util.*;
public class Solution {
	public static int findCelebrity(int n) {
        // Write your code here.
        Stack<Integer> st=new Stack<>();
        for(int i=0;i<n;i++)
        {
            st.push(i);
        }
        while(st.size()!=1)
        {
            int f=st.pop();
            int s=st.pop();
            if(Runner.knows(f,s)){
                st.push(s);
            }
            else{
                st.push(f);
            }
        }
        boolean EveryoneKnow=true;
        for(int i=0;i<n;i++)
        {
            if(i!=st.peek()&&!Runner.knows(i,st.peek()))
            {
                EveryoneKnow=false;
                    break;
            }
        }
        boolean HeknowsNoone=true;
        for(int i=0;i<n;i++)
        {
            if(i!=st.peek()&&Runner.knows(st.peek(),i))
            {
                HeknowsNoone=false;
                break;
            }
        }
        if(EveryoneKnow&&HeknowsNoone)
            return st.peek();
        else return -1;
    }
}
