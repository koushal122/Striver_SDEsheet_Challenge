import java.util.*;
public class Queue {
    // Define the data members(if any) here.
     Stack<Integer> s1;
     Stack<Integer> s2;
         
    Queue() {
        // Initialize your data structure here.
        s1=new Stack<>();
        s2=new Stack<>();
        
    }

    void enQueue(int val) {
        // Implement the enqueue() function.
        s1.push(val);
    }

    int deQueue() {
        // Implement the dequeue() function.
        if(s2.isEmpty()){
            while(!s1.isEmpty())
                s2.push(s1.pop());
        }
        if(s2.isEmpty())
            return -1;
        else return s2.pop();
    }

    int peek() {
        // Implement the peek() function here.
        if(s2.isEmpty()){
            while(!s1.isEmpty())
                s2.push(s1.pop());
        }
        if(s2.isEmpty())
            return -1;
        else return s2.peek();
        
    }

    boolean isEmpty() {
        // Implement the isEmpty() function here.
        if(s2.isEmpty()){
            while(!s1.isEmpty())
                s2.push(s1.pop());
        }
        if(s2.isEmpty())
            return true;
        else return false;
        
    }
}
